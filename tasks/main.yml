---
# tasks file for ansible-role-k3s

- name: get k3s bin
  get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s.sh

- name: Install k3s server
  command: sh /tmp/k3s.sh --no-deploy traefik
  environment: 
    INSTALL_K3S_VERSION: {{ k3s_version }}
  when: ( mode == "server" )

- name: Link kubectl to /usr/bin/kubectl
  file:
    src: /usr/local/bin/kubectl
    dest: /usr/bin/kubectl
    state: link
  when: ( mode == "server" )

- name: Install Helm v2
  shell: |
    export KUBECONFIG=/var/lib/rancher/k3s/server/cred/admin.kubeconfig
    curl -L https://git.io/get_helm.sh | bash
    kubectl -n kube-system create serviceaccount tiller

    kubectl create clusterrolebinding tiller \
      --clusterrole=cluster-admin \
      --serviceaccount=kube-system:tiller
  
    helm init --service-account tiller
  when: ( mode == "server" ) and ( helm_version == "v2" )

- name: Get Helm v3
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /usr/bin/get-helm-3
    mode: 0777
  when: ( mode == "server" ) and ( helm_version == "v3" )

- name: Install Helm v3
  command: /usr/bin/get-helm-3
  when: ( mode == "server" ) and ( helm_version == "v3" )

- name: Configure dashboard manifest
  template:
    src: templates/kubernetes-dashboard.yaml
    dest: /etc/kubernetes-dashboard.yaml
  when: ( mode == "server" )

- name: install Kubernetes dashboard
  shell: kubectl apply -f /etc/kubernetes-dashboard.yaml
  when: ( mode == "server" )

- name: get the dashboard token
  shell: echo "$(kubectl describe secret -n kubernetes-dashboard kubernetes-dashboard-secret | grep "token:" | awk '{print $2}')"
  register: token
  when: ( mode == "server" )

- name: print token
  debug:
    var: token.stdout_lines
  when: ( mode == "server" )

- name: dump node token on k3s master node
  copy:
    content: "{{ token.stdout }}"
    dest: /etc/k8s_dashboard_token
  when: ( mode == "server" )

- name: read node token on k3s master node
  shell: cat  /var/lib/rancher/k3s/server/node-token
  register: node_token
  delegate_to: "{{ master_ip }}"
  when: ( mode == "node" )

- name: wait 2 min for flannel to start
  wait_for:
    timeout: 120 
  delegate_to: localhost
  when: ( mode == "node" )

- name: Install k3s node
  command: sh /tmp/k3s.sh 
  environment:
    INSTALL_K3S_EXEC: "--node-label {{ node_label }}"
    K3S_URL: https://{{ master_ip }}:6443
    K3S_TOKEN: "{{ node_token.stdout }}"
  #shell: INSTALL_K3S_EXEC="--docker" K3S_URL=https://{{ master_ip }}:6443 K3S_TOKEN=`cat  /mnt/nfs/node-token` sh /tmp/k3s.sh 
  #--node-label {{ node_label }}
  when: ( mode == "node" )

